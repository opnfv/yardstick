#!/bin/bash

##############################################################################
# Copyright (c) 2015 Ericsson AB and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

# yardstick-img-modify - download and modify a Ubuntu cloud image
#
# The actual customization is done by a script passed with an absolute path as
# the only single argument. The command needs to be invoked as sudo
#
# Example invocation:
# yardstick-img-modify /home/yardstick/tools/ubuntu-server-cloudimg-modify.sh
#
# Warning: the script will create files by default in:
#   /tmp/workspace/yardstick
# the files will be owned by root!
#
# TODO: image resize is needed if the base image is too small
#

set -e

die() {
    echo "error: $1" >&2
    exit 1
}

test $# -eq 1 || die "no image specific script as argument"
test $(id -u) -eq 0 || die "should invoke using sudo"

cmd=$1
test -x $cmd
mountdir="/mnt/yardstick"

workspace=${WORKSPACE:-"/tmp/workspace/yardstick"}
host=${HOST:-"cloud-images.ubuntu.com"}
release=${RELEASE:-"trusty"}
image_path="${release}/current/${release}-server-cloudimg-amd64-disk1.img"
image_url=${IMAGE_URL:-"https://${host}/${image_path}"}
md5sums_path="${release}/current/MD5SUMS"
md5sums_url=${MD5SUMS_URL:-"https://${host}/${md5sums_path}"}

imgfile="${workspace}/yardstick-${release}-server.img"
filename=$(basename $image_url)

# download and checksum base image, conditionally if local copy is outdated
download() {
    test -d $workspace || mkdir -p $workspace
    cd $workspace
    rm -f MD5SUMS # always download the checksum file to a detect stale image
    wget $md5sums_url
    test -e $filename || wget -nc $image_url
    grep $filename MD5SUMS | md5sum -c ||
    if [ $? -ne 0 ]; then
        rm $filename
        wget -nc $image_url
        grep $filename MD5SUMS | md5sum -c
    fi
    cp $filename $imgfile
    cd -
}

# mount image using qemu-nbd
setup() {
    modprobe nbd max_part=16
    qemu-nbd -c /dev/nbd0 $imgfile
    partprobe /dev/nbd0

    mkdir -p $mountdir
    mount /dev/nbd0p1 $mountdir

    cp $cmd $mountdir/$(basename $cmd)
}

# modify image running a script using in a chrooted environment
modify() {
    # resolv.conf does not exist in base image, pass nameserver value from host
    nameserver_ip=$(grep -m 1 '^nameserver' \
        /etc/resolv.conf | awk '{ print $2 '})
    chroot $mountdir /$(basename $cmd) $nameserver_ip
}

# cleanup (umount) the image
cleanup() {
    # designed to be idempotent
    mount | grep $mountdir && umount $mountdir
    test -b /dev/nbd0 && partprobe /dev/nbd0
    pgrep qemu-nbd && qemu-nbd -d /dev/nbd0
    rm -rf $mountdir
    killall qemu-nbd 2> /dev/null || true
    lsmod | grep nbd && rmmod nbd || true
}

main() {
    cleanup
    download
    setup
    modify
    cleanup

    echo "the modified image is found here: $imgfile"
}

main

