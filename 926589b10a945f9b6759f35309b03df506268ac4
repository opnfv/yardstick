{
  "comments": [
    {
      "key": {
        "uuid": "9a5c5d37_2ab65f8b",
        "filename": "samples/ping-node-context.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1114
      },
      "writtenOn": "2015-10-27T17:00:16Z",
      "side": 1,
      "message": "Just some things that we maybe need to discuss later. This \u0027host\u0027 and \u0027target\u0027 stanzas are maybe a bit limited in the general case.\n\nSome scenarios may need a list of nodes in order to perform their tests. E.g. one scenario may need 3 controllers and another scenario maybe needs four random nodes of a specific type.  Do we want/need to be able to express that in yaml?\n\nOr should we allow the scenarios to grab whatever nodes there are in the Node context? An api is maybe needed? \n\nAn do we see a need to support multicontext scenarios (e.g. a scenarios that need both Node and Heat contexts) ?",
      "revId": "926589b10a945f9b6759f35309b03df506268ac4",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a5c5d37_0decd5c6",
        "filename": "samples/ping-node-context.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 423
      },
      "writtenOn": "2015-10-28T01:47:21Z",
      "side": 1,
      "message": "Yes, i agree we need further discussion, current implementation is just for backward  compatibility (we can use NodeContext to run existing test scenarios) and HA initial test case. I will put your thoughts to https://etherpad.opnfv.org/p/yardstick_framework we can do further discussion there. Yiming and Patrick may also have some thoughts, I will ask them to put their comments.\n\nFor multicontext scenarios, I think that is interesting and in some circumstance (e.g. test network benchmark between BareMetal and vm) we need it. I have not tested multicontext scenarios but I think we almost support it.",
      "parentUuid": "9a5c5d37_2ab65f8b",
      "revId": "926589b10a945f9b6759f35309b03df506268ac4",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}