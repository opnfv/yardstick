{
  "comments": [
    {
      "key": {
        "uuid": "da33351e_a9f1c596",
        "filename": "tests/unit/network_services/vnf_generic/vnf/test_cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 6831
      },
      "writtenOn": "2017-10-04T17:10:00Z",
      "side": 1,
      "message": "this test needs to also mock:\n\n yardstick.network_services.vnf_generic.vnf.cgnapt_vnf.time\n\ndue to:\n\n tests.unit.network_services.vnf_generic.vnf.test_cgnapt_vnf.TestCgnaptApproxVnf.test__vnf_up_post                              4.008\n\nbeing more than double the length of time of the next slowest test:\n\n tests.unit.benchmark.core.test_testcase.TestcaseUT.test_list_all                                                               1.514",
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_6c050b45",
        "filename": "tests/unit/network_services/vnf_generic/vnf/test_cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 6507
      },
      "writtenOn": "2017-10-05T04:27:47Z",
      "side": 1,
      "message": "This is not changed in this patch. So i will avoid making changes.",
      "parentUuid": "da33351e_a9f1c596",
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_8e5803fc",
        "filename": "tests/unit/network_services/vnf_generic/vnf/test_cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 6831
      },
      "writtenOn": "2017-10-10T16:20:38Z",
      "side": 1,
      "message": "This review adds \"import time\" to cgnapt_vnf, that is why this needs to mock it.\n\nMocking time is about expediting execution and time is never a reason to fail a unit test.",
      "parentUuid": "da33351e_6c050b45",
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_c90a4989",
        "filename": "yardstick/network_services/vnf_generic/vnf/cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 6831
      },
      "writtenOn": "2017-10-04T17:10:00Z",
      "side": 1,
      "message": "why not get rid of this?",
      "range": {
        "startLine": 68,
        "startChar": 33,
        "endLine": 68,
        "endChar": 48
      },
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_e9074d80",
        "filename": "yardstick/network_services/vnf_generic/vnf/cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 6831
      },
      "writtenOn": "2017-10-04T17:10:00Z",
      "side": 1,
      "message": "why is this still here?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 71,
        "endChar": 52
      },
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_89d5e1e6",
        "filename": "yardstick/network_services/vnf_generic/vnf/cgnapt_vnf.py",
        "patchSetId": 7
      },
      "lineNbr": 75,
      "author": {
        "id": 6831
      },
      "writtenOn": "2017-10-04T17:10:00Z",
      "side": 1,
      "message": "this method would be more use if it was on vnfd_helper and allowed the user to specify the sub-key, as in:\n\n def get_interface_data(self, subkey, port_list\u003dNone):\n   if port_list is None:\n     port_list \u003d self.port_pairs.all_ports)\n   else:\n     port_list \u003d getattr(self.port_pairs, port_list)\n   return {intf: self.find_interface(name\u003dintf)[\u0027virtual-interface\u0027][subkey] for intf in port_list}\n\nthen whatever needs this method could do:\n\n list(self.vnfd_helper.get_interface_data(\u0027dst_ip\u0027, \u0027uplink_ports\u0027).values())\n\nunless it just needs an iterator, then:\n\n self.vnfd_helper.get_interface_data(\u0027dst_ip\u0027, \u0027uplink_ports\u0027).values()",
      "revId": "06acd893f40454b0c56e3b1f88b9cfef11048a32",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}