{
  "comments": [
    {
      "key": {
        "uuid": "1a622d24_a44e8b6d",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 115,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-02-13T17:20:58Z",
      "side": 1,
      "message": "The description says different:\n\n\"\nSupport using existing private key\n\nCurrently, the private key is auto-generated from Yardstick.\nThis patch will allow user use their existing private key,\nfor example, in the external heat template.\n\"\n\nAs I understand, it means that you are adding support of user provided key for both scenario, doesn\u0027t matter if template is provided or not.\nIn your case, the key_filename will work ONLY if you provide the external template.\nSo if you are adding feature that support using of existing private key, please change the implementation to support key_filename in both cases, doesn\u0027t matter if template is provided or not. The key_filename should work with auto-generated template too.",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 115,
        "endChar": 51
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_f83349f4",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 115,
      "author": {
        "id": 7491
      },
      "writtenOn": "2019-02-19T03:17:39Z",
      "side": 1,
      "message": "Dear Volodymyr Mytnyk,\nIn my case, I just want to use the external key_filename if the external heat template is provided. And if the external heat template is not provided, it will use the key that auto-generated by yardstick. \nSo, should I change the description?",
      "parentUuid": "1a622d24_a44e8b6d",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 115,
        "endChar": 51
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_78b479f2",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 115,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-02-20T10:18:27Z",
      "side": 1,
      "message": "In this case yes, please change the description according.",
      "parentUuid": "fafc7978_f83349f4",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 115,
        "endChar": 51
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_e4588334",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 533,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-02-13T17:20:58Z",
      "side": 1,
      "message": "Again, if user provided template file in TC and provided incorrect key_filename path (e.g. key_filename: yardstick/resources/files/key-blabla), the Yardstick will generate automatically SSH key using the provided key file name and use it by heat. The logic above will not catch that (since the incorrect key file provided by user will be generate automatically anyway by Yardstick). This behavior is not obvious for user, thus it should be fixed.\nThe correct logic of you changes should be the following:\nIf user provided incorrect key file name, the Yardstick should stop running the TC and print an error as above. This doesn\u0027t work like that at the moment.",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 533,
        "endChar": 17
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_d83005eb",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 533,
      "author": {
        "id": 7491
      },
      "writtenOn": "2019-02-19T03:17:39Z",
      "side": 1,
      "message": "As my opinion, we just check the key_filename exists and is readable is enough. Because if user provide the incorrect the key_filename, it will failed when running test. And it quite difficult for us when checking the provided key_filename is correct or not. And before running test, user need make sure that they provide the correct inputs (key_filename, image, ...).",
      "parentUuid": "1a622d24_e4588334",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 533,
        "endChar": 17
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_98915d55",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 14
      },
      "lineNbr": 533,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-02-20T10:18:27Z",
      "side": 1,
      "message": "You have confused me. I will try to be more clear.\nI have my own keys (private/public) generated by ssh-keygen for example. As I understand, you patch adds feature to Yardstick to be able to provide USER-GENERATED key to the external heat template. Is my understanding correct? If this is correct, please run the TC with external template and specify incorrect key_filename (like in the example above) and provide the log of Yardstick run with message in L531. I\u0027m not able to archive this on my setup since the Yardstick will generate the key file anyway. If my understand is not correct, please explain in more detail what are you going to achieve in this patch. As right now your patch  only provides the way to specify the USER-DEFINED key filename (instead of generate name) and Yardstick generates the keys (private/public) automatically in any case. If this is what you want to achieve, please explain why do you need this feature?",
      "parentUuid": "fafc7978_d83005eb",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 533,
        "endChar": 17
      },
      "revId": "5b6f908f0e6cf7558f9e7ea7f4cff2623a0a514f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}