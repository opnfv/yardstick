# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- set_fact:
    vnf_build_dir: "{{ samplevnf_path }}/VNFs/{{ vnf_build_dirs[vnf_name] }}"

- set_fact:
    vnf_app_name: "{{ vnf_app_names[vnf_name] }}"

- name: Install extra build dependencies
  action: "{{ ansible_pkg_mgr }} name={{ item }} state=present"
  with_items: "{{ vnf_build_dependencies.get(vnf_name, {}).get(ansible_os_family, []) }}"

- name: set build env vars
  set_fact:
      build_env_vars:
        RTE_SDK: "{{ RTE_SDK }}"
        RTE_TARGET: "{{ RTE_TARGET }}"
        VNF_CORE: "{{ samplevnf_path }}"

- name: set soft CRC and GEN_DECAP_IPV6_TO_IPV4_CKSUM for PROX when building in VM
  set_fact:
      build_env_vars: "{{ build_env_vars|combine({'crc': 'soft'})|combine({'GEN_DECAP_IPV6_TO_IPV4_CKSUM':'y'}) }}"
  when: vnf_name == "PROX" and image_type is defined and image_type == "vm"

- name: "make {{ vnf_name }} clean"
  command: make -j {{ ansible_processor_vcpus }} clean
  args:
    chdir: "{{ vnf_build_dir }}"
  environment: "{{ build_env_vars }}"

- name: "make {{ vnf_name }}"
  command: make -j {{ ansible_processor_vcpus }}
  args:
    chdir: "{{ vnf_build_dir }}"
  environment: "{{ build_env_vars }}"

#- command: cp "{{ vnf_build_dir }}/{{ vnf_name }}/build/ip_pipeline" "{{ INSTALL_BIN_PATH }}/vACL_vnf"

- name: "Install {{ vnf_name }} VNF"
  copy:
    src: "{{ vnf_build_dir }}/build/{{ vnf_app_name }}"
    dest: "{{ INSTALL_BIN_PATH }}/{{ vnf_app_name }}"
    remote_src: True
    # make executable
    mode: 0755

- set_fact:
    path_vnf: "{{ INSTALL_BIN_PATH }}/{{ vnf_app_names[vnf_name]}}"

- stat:
    path: "{{ path_vnf }}"
    checksum_algorithm: md5
  register: path_vnf_var

- stat:
    path: "{{ path_json }}"
  register: path_json_var

- name: Fetch from remote
  fetch:
    src: "{{ path_json }}"
    dest: "{{ path_json }}"
    flat: yes
  when: path_json_var.stat.exists

- name: Read from json
  set_fact:
    json_vars: "{{ lookup('file', path_json) | from_json }}"
  when: path_json_var.stat.exists

- set_fact:
    json_vars: "{{ json_vars | default([]) | combine({ vnf_app_names[vnf_name]: {'branch_commit': samplevnf_version, 'path_vnf': path_vnf, 'md5': path_vnf_var.stat.checksum }}) }}"

- name: Update json file
  copy:
    content: "{{ json_vars | to_nice_json }}"
    dest: "{{ path_json }}"
    mode: 0755
