# Copyright (c) 2016, Intel Corporation.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Intel Corporation nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
  # must do this before setting yum proxy
  - name: find yum/dnf config
    stat: "path={{ item }}"
    register: packager_conf_stat
    with_items:
      - /etc/yum.conf
      - /etc/dnf/dnf.conf

  - name: insert yum/dnf proxy(http)
    # insert after [main] section
    lineinfile:
      dest: "{{ item.stat.path }}"
      state: present
      regexp: "^proxy\\s*=\\s*{{ proxy_env.http_proxy }}"
      insertafter: "^\\[main\\]"
      line: "proxy={{ proxy_env.http_proxy }}"
    when: '"http_proxy" in proxy_env and item.stat.isreg is defined and item.stat.isreg'
    with_items: "{{ packager_conf_stat.results }}"

  - name: verify proxy
    command: "grep proxy= {{ item.stat.path }}"
    when: 'item.stat.isreg is defined and item.stat.isreg'
    with_items: "{{ packager_conf_stat.results }}"
    register: yum_proxy_lines

#  - name: Test proxy connection
#    # try workaround call makecache directly
#    # yum module was failing for some reason
#    async: "{{ connection_timeout }}"
#    command: "{{ ansible_pkg_mgr }} -d2 -y makecache"
#    poll: 0
#    register: test_proxy_job_id
