{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_120f1638",
        "filename": "yardstick/benchmark/scenarios/lib/create_network.py",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-02-07T19:04:42Z",
      "side": 1,
      "message": "This is not the input parameter (see comments in openstack_utils)",
      "range": {
        "startLine": 49,
        "startChar": 48,
        "endLine": 49,
        "endChar": 79
      },
      "revId": "3029df5a9b28910108b58ee6f3360f7daebfd90f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_f29392a0",
        "filename": "yardstick/common/openstack_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 6869
      },
      "writtenOn": "2018-02-07T10:01:35Z",
      "side": 1,
      "message": "I am not 100% sure if passing only network name is sufficient or we should pass json_body and then retrieve network name from it.Similar confusion for create_neutron_subnet",
      "range": {
        "startLine": 449,
        "startChar": 37,
        "endLine": 449,
        "endChar": 49
      },
      "revId": "3029df5a9b28910108b58ee6f3360f7daebfd90f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_721e6271",
        "filename": "yardstick/common/openstack_utils.py",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-02-07T19:04:42Z",
      "side": 1,
      "message": "And you are right. Take a look at create_network in shade:\n\n    def create_network(self, name, shared\u003dFalse, admin_state_up\u003dTrue,\n                       external\u003dFalse, provider\u003dNone, project_id\u003dNone,\n                       availability_zone_hints\u003dNone):\n        \"\"\"Create a network.\n\n        :param string name: Name of the network being created.\n        :param bool shared: Set the network as shared.\n        :param bool admin_state_up: Set the network administrative state to up.\n        :param bool external: Whether this network is externally accessible.\n        :param dict provider: A dict of network provider options. Example::\n\n           { \u0027network_type\u0027: \u0027vlan\u0027, \u0027segmentation_id\u0027: \u0027vlan1\u0027 }\n        :param string project_id: Specify the project ID this network\n            will be created on (admin-only).\n        :param list availability_zone_hints: A list of availability zone hints.\n\n\nYou need to add those possible parameters to \"create_neutron_net\" and comment them (like in shade):\n\ncreate_neutron_net(shade_client, name, shared\u003dFalse, admin_state_up\u003dTrue,\n   external\u003dFalse, provider\u003dNone, project_id\u003dNone, availability_zone_hints\u003dNone):",
      "parentUuid": "9a3d3df0_f29392a0",
      "range": {
        "startLine": 449,
        "startChar": 37,
        "endLine": 449,
        "endChar": 49
      },
      "revId": "3029df5a9b28910108b58ee6f3360f7daebfd90f",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}