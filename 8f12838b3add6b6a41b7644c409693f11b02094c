{
  "comments": [
    {
      "key": {
        "uuid": "5ac10518_8b4e2e95",
        "filename": "api/server.py",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T02:09:06Z",
      "side": 1,
      "message": "is this just list()?\n\n subclasses \u003d list(ifilter(func, models.__dict__.values()))\n\nalso I think it is slighty more acceptable to use var(models) instead of models.__dict__\n\n subclasses \u003d list(ifilter(func, var(models).values())\n\nBut if you are just looking for classes maybe the inspect module is better\n\n subclasses \u003d inspect.getmembers(models, inspect.isclass)",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_c6674db6",
        "filename": "api/server.py",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T08:22:11Z",
      "side": 1,
      "message": "OK, I will use inspect instead of it.",
      "parentUuid": "5ac10518_8b4e2e95",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_2b45ba6f",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T02:09:06Z",
      "side": 1,
      "message": "why sleep before getting?\n\nand don\u0027t we want some retry limit?\n\n CHECK_STATUS_RETRY \u003d 100000\n\n for retry in xrange(CHECK_STATUS_RETRY):\n    status \u003d HttpClient().get(url)[\u0027status\u0027]\n    if status:\n       break\n    # only sleep if invalid status\n    time.sleep(CHECK_STATUS_DELAY)",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_6b32e211",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T02:36:03Z",
      "side": 1,
      "message": "This is a async task. It may need some time. If we get status immediately, the status must be unfinished. So I sleep before getting.\n\nYes, You are right. Retry limit is needed.",
      "parentUuid": "5ac10518_2b45ba6f",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_0636b5e7",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T06:50:08Z",
      "side": 1,
      "message": "okay that makes sense. but please use constants for the numbers.  Also please add a comment indicating that we are sleeping to let async have a chance to run.",
      "parentUuid": "5ac10518_6b32e211",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_e672897b",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T08:22:11Z",
      "side": 1,
      "message": "Thank you! Your comment make my code more standard.",
      "parentUuid": "5ac10518_0636b5e7",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_4b484687",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T02:09:06Z",
      "side": 1,
      "message": "prepare for python3\n\n  from __future__ import print_function\n\n  print()\n\n\nbut really should use logging.info()",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_2b3cdae1",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T02:36:03Z",
      "side": 1,
      "message": "Here I want the user know the status, so I use print.\nDo you have a better way. Like the linux service to reply status?",
      "parentUuid": "5ac10518_4b484687",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_e63a89cc",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T06:50:08Z",
      "side": 1,
      "message": "print goes to stdout which is usually not line buffered, so the user might not see it anyway.\n\nTo flush the buffer you want flush\u003dTrue\n\n  print(switch[status], flush\u003dTrue)\n\nhttps://docs.python.org/3/library/functions.html?highlight\u003dprint#print\n\n\nlogging.info() goes to stderr which is usually line buffered and logging also flushes.",
      "parentUuid": "5ac10518_2b3cdae1",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_061c7512",
        "filename": "yardstick/cmd/commands/env.py",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T08:27:33Z",
      "side": 1,
      "message": "The CI verify report a failure, see:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nERROR: test_check_status (cmd.commands.test_env.EnvCommandTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/jenkins/opnfv/slave_root/workspace/yardstick-verify-master/yardstick_venv/local/lib/python2.7/site-packages/mock/mock.py\", line 1305, in patched\n    return func(*args, **keywargs)\n  File \"/home/jenkins/opnfv/slave_root/workspace/yardstick-verify-master/tests/unit/cmd/commands/test_env.py\", line 53, in test_check_status\n    EnvCommand()._check_status(task_id)\n  File \"yardstick/cmd/commands/env.py\", line 64, in _check_status\n    print (switcher[status], flush\u003dTrue)\nTypeError: \u0027flush\u0027 is an invalid keyword argument for this function",
      "parentUuid": "5ac10518_e63a89cc",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_eb5ed244",
        "filename": "yardstick/common/httpClient.py",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-01-05T02:09:06Z",
      "side": 1,
      "message": "can we oneline it?\n\n return requests.get(url).json()",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ac10518_4b3fe6d6",
        "filename": "yardstick/common/httpClient.py",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5437
      },
      "writtenOn": "2017-01-05T02:36:03Z",
      "side": 1,
      "message": "Yes, it is better.",
      "parentUuid": "5ac10518_eb5ed244",
      "revId": "8f12838b3add6b6a41b7644c409693f11b02094c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}