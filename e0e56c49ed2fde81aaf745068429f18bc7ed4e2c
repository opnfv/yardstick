{
  "comments": [
    {
      "key": {
        "uuid": "5a3f45e8_92aa9cd0",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-20T10:14:27Z",
      "side": 1,
      "message": "1) We are using \"-\" to assign the host name plus the task ID to the VMs [1]. Using the same separator is a bad idea. Instead of this use underscore.\n2) There is a function in base.Context, \"split_name\", to do this operation. If you need something different in kubernetes, override the parent function.\n3) Provide a method in base.Context and kubernetes.KubernetesContext to do just the opposite: to format the name (what you are doing in L634)\n4) Testing: all those functions must be tested, just in case, as I said in point 1, to check that the name-taskid separator doesn\u0027t collide with the qualified name separator.\n\n[1]https://github.com/opnfv/yardstick/blob/master/yardstick/benchmark/contexts/base.py#L65\n[2]https://github.com/opnfv/yardstick/blob/master/yardstick/benchmark/contexts/base.py#L46",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_0c302ce7",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 5437
      },
      "writtenOn": "2018-03-21T04:05:05Z",
      "side": 1,
      "message": "1)I don\u0027t agree using \u0027_\u0027, since we use \u0027_\u0027 in python, so user maybe use \u0027_\u0027 in server_name or context_name, so I don\u0027t think \u0027_\u0027 is a good idea.\n2)I\u0027m sorry I\u0027m still not clear about your suggestion. Can you show some demo to clarify it? From my perspective, this method  must be changed, since scenario[\u0027host\u0027](or target) may be used in our scenarios, so the value must be same as the real pod name(xxx-xxx not xxx.xxx), maybe we can use split_name in KubernetesContext to do some improvement. But for now, we can\u0027t verify some opnfv k8* scenarios for this bug, so maybe fixing it come the first.\n3)I totally agree with you about the importance of testing. In this patch: https://gerrit.opnfv.org/gerrit/#/c/52451/,  we  got this bug. To avoid similiar issue again, I think 1. we need to do lots of test(also we need to use unittest to check if our modification is correct); 2. We need to use jenkins CI to reverify it, if we do some refactor or changes, we need to check with CI to make our modification correct. BTW, if NSB test case run in CI, it would be better.",
      "parentUuid": "5a3f45e8_92aa9cd0",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_65758397",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-22T07:28:00Z",
      "side": 1,
      "message": "1) I\u0027m saying using \"-\" dash symbol, not \"_\" underscore. Because you didn\u0027t write any test, you didn\u0027t see your solution will fail. For example:\n    [\"node\", \"name\", \"id\"] \u003d \"node.name.id\".split(\".\")\n\n2) In this function you have:\n- The context name.\n- The context object.\nIn [1] you can see how Context implements a function to split the name in node name and context name. Create a new function in Kubernetes context to split using this new separator. Or add to Context class the separator and use it in this function.\n\n3) Instead of having L634, implement this formatting command in Context class, because this is general to a context object.\n\n  class Context():\n  ...\n  def format_qualified_name(self, node_name):\n    return \u0027{}{}{}\u0027.format(node_name, self.separator, self.name)\n    \n4) Can you point in my patch where is this bug? This patch moved the logic of the suffix, with the same behaviour in every Context. And this patch was merged 21 days ago. Anyway, this patch, if you implement the needed test cases, will fail as I said in point 1.\n\n\n[1] https://github.com/opnfv/yardstick/blob/master/yardstick/benchmark/contexts/base.py#L46",
      "parentUuid": "5a3f45e8_0c302ce7",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_e5afd3e1",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 5437
      },
      "writtenOn": "2018-03-22T07:38:05Z",
      "side": 1,
      "message": "node_name, context_name \u003d name.split(\u0027.\u0027), actually if in kubernetes context, \u0027xxx-xxx\u0027 do not have the second value, so it will raise ValueError. Or can you submit another patch to fix this issue? Since for other teams, this test case can run normally comes first.",
      "parentUuid": "5a3f45e8_65758397",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_e596b393",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-22T07:44:00Z",
      "side": 1,
      "message": "You are thinking only for Kubernetes. What is happening in the rest of contexts?",
      "parentUuid": "5a3f45e8_e5afd3e1",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_6538e3a0",
        "filename": "yardstick/benchmark/core/task.py",
        "patchSetId": 1
      },
      "lineNbr": 626,
      "author": {
        "id": 5437
      },
      "writtenOn": "2018-03-22T08:05:40Z",
      "side": 1,
      "message": "Do you mean other test case will failed or have potential risk? If not, can we merge it first, and then you upload another patch to improve it?",
      "parentUuid": "5a3f45e8_e596b393",
      "revId": "e0e56c49ed2fde81aaf745068429f18bc7ed4e2c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}