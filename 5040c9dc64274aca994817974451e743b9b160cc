{
  "comments": [
    {
      "key": {
        "uuid": "5a3f45e8_c4a014f7",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-02-28T14:27:36Z",
      "side": 1,
      "message": "Ross is right in PS5. We should check this before.\n\nRecommendation:\nif not (os.path.isfile(self.key_filename)\n        and os.access(self.key_filename, os.R_OK):\n    utils.remove_file(self.key_filename)  # Just in case, this function won\u0027t raise\n                                            an exception if the file doesn\u0027t exist\n    SSH.gen_keys(self.key_filename)",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 49
      },
      "revId": "5040c9dc64274aca994817974451e743b9b160cc",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_c7301659",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 7
      },
      "lineNbr": 140,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-02-28T18:38:24Z",
      "side": 1,
      "message": "If the file exists, we don\u0027t want to over-write it ever, since this would be the one used to connect into the VMs spawned by heat.\n\nIt\u0027s conceivable that the keys may have been generated by a previous test run, then the permissions changed before a new testcase was run.\nIn that case, we don\u0027t want to create new keys, as that would mean that the VNFs are not going to be accessible again. \n\nif there was a permissions change, the user can still update the permissions and run the test again.\nThis cannot be done if the keys are nuked and re-created.",
      "parentUuid": "5a3f45e8_c4a014f7",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 49
      },
      "revId": "5040c9dc64274aca994817974451e743b9b160cc",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_44ac04ee",
        "filename": "yardstick/tests/unit/benchmark/contexts/test_heat.py",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-02-28T14:27:36Z",
      "side": 1,
      "message": "nit:\n---\nfrom yardstick import ssh\n...\n@mock.patch.object(ssh.SSH, \u0027gen_keys\u0027)",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 45
      },
      "revId": "5040c9dc64274aca994817974451e743b9b160cc",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_c13126a4",
        "filename": "yardstick/tests/unit/benchmark/contexts/test_heat.py",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 6869
      },
      "writtenOn": "2018-02-28T11:25:20Z",
      "side": 1,
      "message": "why these lines are commented?",
      "range": {
        "startLine": 132,
        "startChar": 5,
        "endLine": 137,
        "endChar": 40
      },
      "revId": "5040c9dc64274aca994817974451e743b9b160cc",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_21272a66",
        "filename": "yardstick/tests/unit/benchmark/contexts/test_heat.py",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 6869
      },
      "writtenOn": "2018-02-28T11:25:20Z",
      "side": 1,
      "message": "same comment as above.",
      "range": {
        "startLine": 281,
        "startChar": 8,
        "endLine": 281,
        "endChar": 47
      },
      "revId": "5040c9dc64274aca994817974451e743b9b160cc",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}