{
  "comments": [
    {
      "key": {
        "uuid": "1a622d24_ddf1edce",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 12
      },
      "lineNbr": 527,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-01-18T10:43:37Z",
      "side": 1,
      "message": "I\u0027m not sure about the flow of function call... thus I have a few questions:\n1. Does this function can be called after \"deploy()\" (L342) method is called\"?\n2. If #1 is yes, then if the \"key_filename\" is set to non existed file name, it will be generated by L356 anyway and have generated key instead of provided one which may cause the issue during connection to the VM. It will be hard to determine why the connection problem to VM exists.",
      "revId": "1edde72f990f3482a92e04fa389323d1f16a4f73",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_1cd7dec2",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 12
      },
      "lineNbr": 527,
      "author": {
        "id": 7491
      },
      "writtenOn": "2019-01-30T12:20:44Z",
      "side": 1,
      "message": "Sorry for late reply.\nThank you for your comment. \nI think the flow is just simple. In deploy() function, we has two cases:\nFirst case, using internal key is generate by yardstick ( by default yardstick flow).\nSecond case, using external key is provided by user.\n\nFor your two questions:\n1. Yes, this function is called after deploy() function.\n2. This is the first case, if the \"key_filename\" does not exist, it will raise the error, and does not generate the key by L356. Because L356 just generates the key in deploy() function before.",
      "parentUuid": "1a622d24_ddf1edce",
      "revId": "1edde72f990f3482a92e04fa389323d1f16a4f73",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_97b6293c",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 12
      },
      "lineNbr": 527,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-01-30T13:59:35Z",
      "side": 1,
      "message": "Let\u0027s assume, the user specified wrong keyfile name in TC.\n- Since, the deploy() will be called first, the key will be automatically generated by Yardstick in L356.\n- Next, L527, os.path.exists(self.key_filename) will return True, because the key file has been generated in L356.\n- If the flows above correct, it means that the Yardstick will be using auto-generated instead of provided (not existed file) which user will not be aware (and it is not obvious) and will get error connecting VM with wrong (auto generated) key file most probably.",
      "parentUuid": "1a622d24_1cd7dec2",
      "revId": "1edde72f990f3482a92e04fa389323d1f16a4f73",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_f795dde4",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 12
      },
      "lineNbr": 527,
      "author": {
        "id": 7491
      },
      "writtenOn": "2019-01-31T01:21:27Z",
      "side": 1,
      "message": "No. In the deploy() function, it only generates the key (in L356) in case the key_filename does not exist (L355).\nAnd, the user need make sure that they specified the right external key.",
      "parentUuid": "1a622d24_97b6293c",
      "revId": "1edde72f990f3482a92e04fa389323d1f16a4f73",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_3b4c5f70",
        "filename": "yardstick/benchmark/contexts/heat.py",
        "patchSetId": 12
      },
      "lineNbr": 527,
      "author": {
        "id": 6419
      },
      "writtenOn": "2019-01-31T12:44:43Z",
      "side": 1,
      "message": "Pulled down your changes. When existing key_filename is provided, the following error is raised (Running vfw/tc_heat_rfc2544_ipv4_1rule_1flow_64B_trex.yaml TCs):\n------\n2019-01-31 12:39:39,208 [ERROR] yardstick.benchmark.core.task task.py:123 Testcase: \"tc_heat_rfc2544_ipv4_1rule_1flow_64B_trex\" FAILED!!!\nTraceback (most recent call last):\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/core/task.py\", line 118, in start\n    output_config)\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/core/task.py\", line 246, in _run\n    context.deploy()\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/contexts/heat.py\", line 364, in deploy\n    self._add_resources_to_template(heat_template)\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/contexts/heat.py\", line 199, in _add_resources_to_template\n    template.add_keypair(self.keypair_name, self.name)\n  File \"/home/opnfv/repos/yardstick/yardstick/orchestrator/heat.py\", line 450, in add_keypair\n    key_id + \u0027.pub\u0027),\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1210, in resource_string\n    self, resource_name\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1452, in get_resource_string\n    return self._get(self._fn(self.module_path, resource_name))\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1572, in _get\n    with open(path, \u0027rb\u0027) as stream:\nIOError: [Errno 2] No such file or directory: \u0027/home/opnfv/repos/yardstick/yardstick/resources/files/yardstick_key-yardstick-7a26f833.pub\u0027\n--------------------------------\n\nWhen wrong key_filename is provided, the same error is observed):\n-------------\n2019-01-31 12:42:51,516 [ERROR] yardstick.benchmark.core.task task.py:123 Testcase: \"tc_heat_rfc2544_ipv4_1rule_1flow_64B_trex\" FAILED!!!\nTraceback (most recent call last):\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/core/task.py\", line 118, in start\n    output_config)\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/core/task.py\", line 246, in _run\n    context.deploy()\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/contexts/heat.py\", line 364, in deploy\n    self._add_resources_to_template(heat_template)\n  File \"/home/opnfv/repos/yardstick/yardstick/benchmark/contexts/heat.py\", line 199, in _add_resources_to_template\n    template.add_keypair(self.keypair_name, self.name)\n  File \"/home/opnfv/repos/yardstick/yardstick/orchestrator/heat.py\", line 450, in add_keypair\n    key_id + \u0027.pub\u0027),\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1210, in resource_string\n    self, resource_name\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1452, in get_resource_string\n    return self._get(self._fn(self.module_path, resource_name))\n  File \"build/bdist.linux-x86_64/egg/pkg_resources/__init__.py\", line 1572, in _get\n    with open(path, \u0027rb\u0027) as stream:\nIOError: [Errno 2] No such file or directory: \u0027/home/opnfv/repos/yardstick/yardstick/resources/files/yardstick_key-yardstick-d81ef85d.pub\u0027\n------------------------------------",
      "parentUuid": "1a622d24_f795dde4",
      "revId": "1edde72f990f3482a92e04fa389323d1f16a4f73",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}