{
  "comments": [
    {
      "key": {
        "uuid": "9a561d44_bde50caa",
        "filename": "yardstick/common/exceptions.py",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "One of these blank lines needs to be removed.",
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b8b99a30",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "For the docstrings, have a look at the example[1] for the format. The param and its type can be concisely represented in the same line.\n\n[1] https://github.com/opnfv/yardstick/blob/ef78f436ce067ee2ffbf5a0fcc00e082edf61d6b/yardstick/common/messaging/producer.py#L38-L45",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 89,
        "endChar": 11
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f882f250",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "The check for resource can take place separately.\n\nIt\u0027s a required arg, which means it needs to be passed, but empty values can also be passed.\n\nYou can start the method with:\n    if not resource:\n        raise ValueError(\"...\")\nThe you can continue with the _action\u003d...\n\nMy assumption here is that resource should have a value and that an empty string is not acceptable.\nWithout checking resource, an empty string could be passed on through the application and cause issues later, which could get quite difficult to debug (such as when it\u0027s called to create a request url in exec_rest_request.",
      "range": {
        "startLine": 90,
        "startChar": 8,
        "endLine": 92,
        "endChar": 58
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d8872e60",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "See earlier comment on docstrings",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 107,
        "endChar": 30
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f804b27f",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "You don\u0027t need this, since you don\u0027t call _create_user with this parameter.\nYou can hard code it on L140 instead",
      "range": {
        "startLine": 125,
        "startChar": 33,
        "endLine": 125,
        "endChar": 41
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_58ce7e5b",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "Should you check whether the user exists first? And if the user exists, then modify the user to have the right permissions (although, technically, running a test shouldn\u0027t modify the traffic generator users).",
      "range": {
        "startLine": 151,
        "startChar": 8,
        "endLine": 155,
        "endChar": 74
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b8c4fa40",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "_delete_user is not called in this class.\n\nSince it\u0027s designated as a \"private\" method, it shouldn\u0027t be used outside this class.\n\nLooking at connect(), where a new user is created, I\u0027d expect to see disconnect() calling _delete_user()\n\nIf this \"private\" method is not used by LandslideResourceHelper, then it should be either made public (if called somewhere outside the class), or deleted because it is not used.",
      "range": {
        "startLine": 183,
        "startChar": 2,
        "endLine": 183,
        "endChar": 37
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_1847e620",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "There\u0027s no returned by this method",
      "range": {
        "startLine": 188,
        "startChar": 9,
        "endLine": 188,
        "endChar": 40
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_78d1c2fa",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "It looks like this isn\u0027t used.\n\nIf so, it should be deleted",
      "range": {
        "startLine": 193,
        "startChar": 1,
        "endLine": 193,
        "endChar": 40
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_18ed26c4",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "This can potentially return multiple users, if there are many with the same name.\ni.e. if the same LS is used for multiple tests, since we create a user when connecting, and don\u0027t delete it after.",
      "range": {
        "startLine": 201,
        "startChar": 0,
        "endLine": 202,
        "endChar": 69
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f82cb24c",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "Logically, it looks like you\u0027re checking for an error here i.e. a 4xx or 5xx response code.\nIs this the case?\n\nIf so, you should use raise_for_status:\n\nif raise_exc:\n    try:\n        r.raise_for_status()\n    except requests.exceptions.HTTPError as err:\n        raise exceptions.RestApiError(msg)",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 239,
        "endChar": 46
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_182c0647",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "I recommend removing logs as a parameter and leave these debug messages here.\n\nThe user will decide whether they want to see debug messages anyway with the --debug flag",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 16
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f8d31236",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "Recommend consolodating these into a single log entry.\n\nRC -\u003e response code.\n\nMight be better formatted like so:\n\nRequest: %s | URL: %s | Status code: %s |Response: %s\n\nthis shows a chronological ordering of the data.",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 244,
        "endChar": 47
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_98d8161f",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T17:04:46Z",
      "side": 1,
      "message": "This is assuming that the person running the test has root access to the TG. This might be the case with a SW generator, but HW generators are more likely to be owned by a larger organisation, with people sharing access. In this case, we shouldn\u0027t assume that the user has root access.\n\nI suggest passing an existing user and password to the TC, which should be used to run traffic.\nAvoiding creating and deleting users would simplify this code.\nSince we are not orchestrating the TG, and assuming that it is a pre-existing entity (HW/SW), it is reasonable to assume that a user has access to configure it correctly before running the tests. This also follows with what Yardstick does for OpenStack users, we don\u0027t create/delete users in the Heat context.\n\nTL;DR: Pass a set of user credentials for an existing user.\nThe docs for setting up the TG would be updated to add a pre-requisite that the user should be created (and active) already.\n\nThis would mean you can get rid of _create_user(), _delete_user(), _update_user()",
      "range": {
        "startLine": 257,
        "startChar": 3,
        "endLine": 258,
        "endChar": 68
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_7d02543f",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 507,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "It would be more intuitive to have this return a boolean here, considering how it\u0027s used in collect_kpis\n\nIf this does return a boolean, the name of the methods would be more appropriate to rename as is_test_running(run_id) or test_is_running(run_id)\n\nYou can return the following instead:\n    return (\"COMPLETE\" in r.json().get(\"testStateOrStep\"))\n\nTo me, this would represent a more useful method.\n\nBTW, what is returned by r.json().get(\"testStateOrStep\")? Is it a string, and what does the string look like? I\u0027m assuming it\u0027s more than \"COMPLETED\".",
      "range": {
        "startLine": 507,
        "startChar": 8,
        "endLine": 507,
        "endChar": 46
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_dd9a8013",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "nit: you can return this without assigning it to a temporary variable, since there\u0027s no checking or processing",
      "range": {
        "startLine": 510,
        "startChar": 8,
        "endLine": 510,
        "endChar": 12
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_fd95c4e4",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 514,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "nit: \n\n    {}/{}/measurements.format(self.running_test_uri,\n                              run_id)",
      "range": {
        "startLine": 514,
        "startChar": 31,
        "endLine": 514,
        "endChar": 43
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_3da0dc42",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "nit: could do:\n    _elapsed_time \u003d results.get(\u0027elapsedTime\u0027, 0)\n\nsince you\u0027re checking for the truthiness of results[\u0027elapsedTime\u0027].\n\nIf a value of zero would be okay here, then you may needs to explicitly check ``if results[\u0027elapsedTime\u0027] is None`` instead of ``if results[\u0027elapsedTime\u0027]``, which will evaluate to False if the value is zero.",
      "range": {
        "startLine": 519,
        "startChar": 24,
        "endLine": 519,
        "endChar": 79
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_7d89b4c9",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "Remove?\n\nAlso, bad for data integrity to do this",
      "range": {
        "startLine": 539,
        "startChar": 12,
        "endLine": 539,
        "endChar": 45
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_9df92850",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "This needs to be updated if you return a bool from check_running_test_state.",
      "range": {
        "startLine": 545,
        "startChar": 8,
        "endLine": 547,
        "endChar": 31
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_bdfcec3f",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-31T15:31:36Z",
      "side": 1,
      "message": "This looks like we\u0027re assuming that this is being run with an Iteration runner.\n\nWhat happens when duration runner is used in a TC with the landslide?",
      "range": {
        "startLine": 552,
        "startChar": 13,
        "endLine": 552,
        "endChar": 58
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4745036f",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "This reformat is unrelated, it should be in the previous change, where TEST_SERVERS was added.\n\nThis is my fault again, sorry",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_274a8f80",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 1
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_675be754",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "This shouldn\u0027t be here, the scope of this mock is for setUp() only.\n\nYou should do this mocking in setUp()\nCreate a mock with this class\u0027s spec on line 262",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 258,
        "endChar": 52
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_c758f358",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 261,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": ".. from L258\nmock_env_helper \u003d mock.Mock(spec\u003dsample_vnf.SetupEnvHelper)\nself.res_helper \u003d tg_landslide.LandslideResourceHelper(mock_env_helper)",
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_a755ff1e",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 543,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "nit: it would be better if  this is explicitly set, as opposed to composed dynamically here. It enhances readability",
      "range": {
        "startLine": 542,
        "startChar": 12,
        "endLine": 543,
        "endChar": 70
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_0732eb0f",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 598,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "this method doesn\u0027t have a return value, so you shouldn\u0027t be checking for one.\n\nThis happens a few times, please recheck each assertInNone to make sure it\u0027s necessary",
      "range": {
        "startLine": 598,
        "startChar": 8,
        "endLine": 598,
        "endChar": 25
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_e736d702",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 708,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-08-30T17:08:07Z",
      "side": 1,
      "message": "keep this order of these consistent.\n(This one is correct, but others aren\u0027t)\n\nThe conventional order is: assertEqual(expected, actual)\nThe ordering means that the error messages make more sense if this assertion fails, which helps debugging.",
      "range": {
        "startLine": 708,
        "startChar": 25,
        "endLine": 708,
        "endChar": 42
      },
      "revId": "d8e761dc9a138105c4af47e479074db11278bad6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}