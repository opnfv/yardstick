{
  "comments": [
    {
      "key": {
        "uuid": "9a561d44_08031343",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "import itertools",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_84cab09f",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "should be:\n\nfrom six.moves.zip_longest",
      "parentUuid": "9a561d44_08031343",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_a4ab6cd5",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "What would it be used for? If \"zip_longest\" was thought of, it better comes from six lib, as mentioned in PS1.",
      "parentUuid": "9a561d44_08031343",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4804ebbf",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "nit: import module, not class.\n\nShould be changed in an earlier commit",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_04b9802e",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "This specific patch set (#2) is a result of interactive rebase usage, so it doesn\u0027t introduce any change in comparison to PS1.\nNow I avoid doing that kind of rebase, so should more clarity, hopefully.",
      "parentUuid": "9a561d44_4804ebbf",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 31
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_28e1b79a",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "from yardstick.common import yaml_loader",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_e4b56432",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_28e1b79a",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_055f7e42",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T13:02:17Z",
      "side": 1,
      "message": "I\u0027m not sure how I missed this. \n\nThe SampleVNF classes are for the SampleVNF project applications only.\n\nThis SHOULD have been based on GenericVNF/GenericVNFTrafficGen.",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_53f2dcd2",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "Please note that Trex, Prox, Ixia, IxLoad TGs all have same parent class: SampleVNFTrafficGen.\nDuring design phase this was emphasized, and there was a decision to follow this way.\nBesides, same approach was found in OPNFV TG classes inheritance diagram [1].\n\n[1] https://wiki.opnfv.org/display/yardstick/NSB+class+diagram",
      "parentUuid": "9a561d44_055f7e42",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b371b8e2",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "That might be out of date, or SampleVNFTrafficGen is misnamed.\n\nIt also looks like SampleVNF inherits from both SampleVNFTrafficGen and GenericTrafficGen.\n\nI know there have been some updates to the base classes and the architecture which looks like it\u0027s not reflected here.\n\nIf it\u0027s a case that the docs were out of date, we can add a ticket to resolve this once the architecture docs are refreshed",
      "parentUuid": "9a561d44_53f2dcd2",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_a4c08c7d",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "DONE\nThis can be considered resolved. \n\nI\u0027ve added a ticket [1] to update the architecture/class diagram for NSB.\nThere\u0027s a note about updating this class too.\n\n[1] https://jira.opnfv.org/browse/YARDSTICK-1417",
      "parentUuid": "9a561d44_b371b8e2",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_6481544a",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "This class follows a rule of a thumb in Yardstick project. E.g. Prox, Trex, Ixia, IxLoad TGs are inherited from SampleVNFTrafficGen class.\nIf that needs an update, let it be done separately.",
      "parentUuid": "9a561d44_b371b8e2",
      "range": {
        "startLine": 33,
        "startChar": 26,
        "endLine": 33,
        "endChar": 56
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_0821534d",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "Why isn\u0027t this doing anything?\n\nShould it be removed?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_33eda8f0",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "We do not need this method, so we need to stub its implementation in parent class.\nIf removed, this call would execute some code that we may need to avoid.",
      "parentUuid": "9a561d44_0821534d",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_93647423",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Can you add a note here for that?\n\nThe text from the comment is perfect here.",
      "parentUuid": "9a561d44_33eda8f0",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_c495c889",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Pardon me, but I never met before such need to comment why we override parent class implementation.\nIf we need to follow some specific guideline here, please let me get to know it.",
      "parentUuid": "9a561d44_93647423",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_28ba570a",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T13:02:17Z",
      "side": 1,
      "message": "If this is a static method, it shouldn\u0027t be \"private\" as well.\nstatic methods are used without instantiating the class (so, external to the class definition)\nprivate methods are used only within a class itself, so a static private class doesn\u0027t make a lot of sense",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 89,
        "endChar": 45
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_93bbd4e4",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "Long story short: will remove staticmethod mention, if you insist.\n\nLong story: there\u0027s no problem having both the staticmethod decorator and \"weak internal use indicator\" in the method name.\nPython intentionally does not have mechanisms of protected (single underscore) and private(double underscore) methods.\n\nStatic method is kind of a mention of this code been separated from class logics, but allowing to call it using class instance.\n\nThus, this function name does not really conflict with static method decorator.",
      "parentUuid": "9a561d44_28ba570a",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 89,
        "endChar": 45
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d36eec00",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Python doesn\u0027t have private and protected access, but the convention is to use a leading underscore to indicate private use. Most linters flag it as well if you use a \"private\" method",
      "parentUuid": "9a561d44_93bbd4e4",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 89,
        "endChar": 45
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_e48c4482",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Yes, I agree. The convention is to determine which methods of the class should not be called externally.\nNot sure if this still needs any action, in your opinion.",
      "parentUuid": "9a561d44_d36eec00",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 89,
        "endChar": 45
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_084cb341",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T13:02:17Z",
      "side": 1,
      "message": "This is assuming that sut[\u0027ip\u0027], sut[\u0027phy\u0027] and sut[\u0027nextHop\u0027] are all set. Is there an earlier check to make sure these elements exist (maybe when parsing the TC/pod.yaml)?\nOtherwise, this will throw a KeyError.",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 100,
        "endChar": 59
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_481b4b1b",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "Actually, \"if x in sut\" will avoid this",
      "parentUuid": "9a561d44_084cb341",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 100,
        "endChar": 59
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_585c0126",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_481b4b1b",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 100,
        "endChar": 59
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4877cb3a",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "Same question as above regarding static private methods.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 131,
        "endChar": 32
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_48aeab86",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "Use six.iteritems here:\n\n    for _param_key, _param_value in six.iteritems(params):\n        if _param_key...:",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_13cfc480",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "This is just another way to code it.\nI do not recall that it would be more robust or \"more version agnostic\" way.\nCurrent code is version independent as well.\nPlease let me know if I miss something.",
      "parentUuid": "9a561d44_48aeab86",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_8441100e",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_13cfc480",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_28a9b77b",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "tc_options[_param_key] can be replaced with _param_value",
      "range": {
        "startLine": 134,
        "startChar": 39,
        "endLine": 134,
        "endChar": 61
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_64467425",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "DONE\n\nThis is redundant if the above comment is closed",
      "parentUuid": "9a561d44_28a9b77b",
      "range": {
        "startLine": 134,
        "startChar": 39,
        "endLine": 134,
        "endChar": 61
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_e8c5ff3d",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "Please factor this into smaller methods.\nVery long methods are harder to test and read.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 36
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_73672026",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Done - Jira logged: https://jira.opnfv.org/browse/YARDSTICK-1409",
      "parentUuid": "9a561d44_e8c5ff3d",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 139,
        "endChar": 36
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_28c09729",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "It is not immediately clear that these lines are trying to check that len(self.vnfd_helper[\u0027config\u0027]) \u003d\u003d len(session_tests_num) \u003d\u003d len(             self.scenario_helper.all_options[\u0027test_cases\u0027])\n\nInstead of doing something clever, it is often better to do something explicit. \n\nI suggest that this is replaced with the following:\n\n   if ( (len(self.vnfd_helper[\u0027config\u0027]) \u003d\u003d len(session_tests_num)) and (len(session_tests_num) \u003d\u003d len(self.scenario_helper.all_options[\u0027test_cases\u0027])):\n        raise RuntimError.....\n\n\nYou might also be able to compare them all in the same statement too: i.e. len(x) \u003d\u003d len(y) \u003d\u003d len(z)",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 160,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f3c9707a",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "Yes, it would be good approach too.\nBut the benefit of current way is the ability to specify the root cause in exception message. Which won\u0027t be there without counting items and saving the result into variable.",
      "parentUuid": "9a561d44_28c09729",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 160,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_68f28f70",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "it looks like _config_files and _config_files_blocks_num are always going to be the same length.\n\nIs zip_longest necessary here?",
      "range": {
        "startLine": 160,
        "startChar": 21,
        "endLine": 160,
        "endChar": 72
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d3b70c85",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Fair point, but there\u0027s a compromise here.\n\nYou can include the additional information directly, as you are doing now, or you can add message tell the user where the issue is and how to solve it.\n\ne.g. make sure the entries in file XX match the entries in file YY.",
      "parentUuid": "9a561d44_f3c9707a",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 160,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_c4c30889",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "What actions on this do you suggest?",
      "parentUuid": "9a561d44_d3b70c85",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 160,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_a8eb07af",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "This probably should be separated into a separate method, as L162-L164 look like something new is starting.\nThis would help shorten the overall method, and make the code more readable and maintainable (and testable)",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 204,
        "endChar": 70
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_53c93c77",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "Suggest to do it separately, as part of other refactoring efforts, if there\u0027s real need of it.",
      "parentUuid": "9a561d44_a8eb07af",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 204,
        "endChar": 70
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b3ba586c",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Let\u0027s add a Jira ticket to fix this, so we don\u0027t lose track of the work that needs to be done.\n\nI\u0027ve added a Jira for follow-up:\nhttps://jira.opnfv.org/browse/YARDSTICK-1409 (refactor long methods in vEPC feature)",
      "parentUuid": "9a561d44_53c93c77",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 204,
        "endChar": 70
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_c44ae826",
        "filename": "yardstick/network_services/vnf_generic/vnf/tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_b3ba586c",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 204,
        "endChar": 70
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_a85e6774",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "from yardstick.common import utils\nthere\u0027s a bunch of comments on PS1 that should have the right imports.",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d3838c02",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "9a561d44_a85e6774",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_284a57ac",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-04T17:26:18Z",
      "side": 1,
      "message": "You also need\n\nfrom yardstick.benchmark.contexts import base as ctx_base",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_738c4036",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-05T09:48:50Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "9a561d44_284a57ac",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f3f3309d",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 439,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "This is unnecessary, when checking this value check it directly.",
      "range": {
        "startLine": 439,
        "startChar": 8,
        "endLine": 439,
        "endChar": 62
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_243c7c93",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 439,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_f3f3309d",
      "range": {
        "startLine": 439,
        "startChar": 8,
        "endLine": 439,
        "endChar": 62
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_e8fdff3c",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "This should also check that bin_path, name, runs_traffic, traffic_finished, session_profile are set to the expected values.",
      "range": {
        "startLine": 447,
        "startChar": 1,
        "endLine": 449,
        "endChar": 67
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_53301c01",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "You should create a separate instance of the tg_landslide here, as setUp() modifies the instance created there.",
      "parentUuid": "9a561d44_e8fdff3c",
      "range": {
        "startLine": 447,
        "startChar": 1,
        "endLine": 449,
        "endChar": 67
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_445ed8ea",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_e8fdff3c",
      "range": {
        "startLine": 447,
        "startChar": 1,
        "endLine": 449,
        "endChar": 67
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_2463dcb2",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_53301c01",
      "range": {
        "startLine": 447,
        "startChar": 1,
        "endLine": 449,
        "endChar": 67
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_13d22400",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 505,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "suts should be updated here, not _testcase, so they should be checked.",
      "range": {
        "startLine": 505,
        "startChar": 0,
        "endLine": 505,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_983df9be",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 505,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "In this case, we expect that the TC is not updated; so this test is correct.\n\nThis comment can be considered closed/done.",
      "parentUuid": "9a561d44_13d22400",
      "range": {
        "startLine": 505,
        "startChar": 0,
        "endLine": 505,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_a447ec1c",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 505,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-10T13:15:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a682502_983df9be",
      "range": {
        "startLine": 505,
        "startChar": 0,
        "endLine": 505,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b3eb78af",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "See below, \n\nit\u0027s better to explicitly construct or set the return values here/\n\nTechnically, helper methods also need to be tested",
      "range": {
        "startLine": 509,
        "startChar": 0,
        "endLine": 519,
        "endChar": 35
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_786e1dcb",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "I see these return quite large, complex pieces of data.\n\nCan you add a comment with a note saying why these are used?",
      "parentUuid": "9a561d44_b3eb78af",
      "range": {
        "startLine": 509,
        "startChar": 0,
        "endLine": 519,
        "endChar": 35
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_6414b4f5",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 519,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a682502_786e1dcb",
      "range": {
        "startLine": 509,
        "startChar": 0,
        "endLine": 519,
        "endChar": 35
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_b86715ea",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 540,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "Would this look better without the loop?",
      "range": {
        "startLine": 532,
        "startChar": 0,
        "endLine": 540,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_a4f52ccd",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 540,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "No, but I\u0027ll try to beautify the look of this code.",
      "parentUuid": "5a682502_b86715ea",
      "range": {
        "startLine": 532,
        "startChar": 0,
        "endLine": 540,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_33ee48b5",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "assertIsNone for a method that doesn\u0027t return anything doesn\u0027t give any useful information",
      "range": {
        "startLine": 552,
        "startChar": 12,
        "endLine": 552,
        "endChar": 30
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_24311ca3",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "It confirms that function did not start returning something that is not expected.",
      "parentUuid": "9a561d44_33ee48b5",
      "range": {
        "startLine": 552,
        "startChar": 12,
        "endLine": 552,
        "endChar": 30
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_53f3fc9d",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 557,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "Don\u0027t set a class variable for this. check self.tg_ls.xxx[\u0027tsGroups\u0027]",
      "range": {
        "startLine": 555,
        "startChar": 9,
        "endLine": 557,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_9864d9e6",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 557,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "OV agreed to update.",
      "parentUuid": "9a561d44_53f3fc9d",
      "range": {
        "startLine": 555,
        "startChar": 9,
        "endLine": 557,
        "endChar": 40
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d336ec51",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "Check that the right value was set instead of checking that it has some value",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 559,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_f8618dd4",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "This is checked later.\n\nTechnically, both are not needed, but that\u0027s a minor thing.",
      "parentUuid": "9a561d44_d336ec51",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 559,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_642b1431",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Removed this one, as equality check follows.",
      "parentUuid": "9a561d44_d336ec51",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 559,
        "endChar": 76
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_134064a4",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "before calling the method under test, I would also check the pre-conditions to make sure that the values have been changed",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 72
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_d85e5112",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T11:05:52Z",
      "side": 1,
      "message": "There\u0027s no need for the pre-checks; in this case the method doesn\u0027t expect particular values to be present before hand. We just care that the right values are set after.\n\nThis comment can be considered resolved.",
      "parentUuid": "9a561d44_134064a4",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 72
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_b339b843",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 570,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "This is checking that the value has been changed.\n\nIt would be more useful to check that the right value has been set.",
      "range": {
        "startLine": 570,
        "startChar": 2,
        "endLine": 570,
        "endChar": 48
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_9892199e",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 570,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "OV to update",
      "parentUuid": "9a561d44_b339b843",
      "range": {
        "startLine": 570,
        "startChar": 2,
        "endLine": 570,
        "endChar": 48
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_e41604f1",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 570,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Added assertEqual but let NotEqual one stay too, to emphasize that the _testcase content has been updated.",
      "parentUuid": "5a682502_9892199e",
      "range": {
        "startLine": 570,
        "startChar": 2,
        "endLine": 570,
        "endChar": 48
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_73e1e0cf",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "Overall, this is a very complicated test.\n\nIt\u0027s hard to tell what good inputs and bad inputs are.",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_d88c9182",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "This is resolved with some comments saying why it was done this way",
      "parentUuid": "9a561d44_73e1e0cf",
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_93de3410",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 578,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "It\u0027s better to explicitly construct the expected return value, besides introducing a new method here that should be tested as well.",
      "range": {
        "startLine": 574,
        "startChar": 0,
        "endLine": 578,
        "endChar": 62
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_f88fcd73",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 578,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "Same as above, a short comment saying why this was done",
      "parentUuid": "9a561d44_93de3410",
      "range": {
        "startLine": 574,
        "startChar": 0,
        "endLine": 578,
        "endChar": 62
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f33a1033",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 596,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "as above, explicit checks are better. It\u0027s okay to construct a dict of expected values, and use them instead of doing a loop like this to check them.\n\nI\u0027m not sure what\u0027s being compared here.",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 596,
        "endChar": 29
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_78f3bd0a",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 596,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "Complexity here is justified, comment on helper method will explain this.\n\nYou could also add a short note here, but that would be repeating the same as above.\n\nuse assertEqual(expected_val, actual_val); assertEqual(_val, get_session_tc_param_value(...))",
      "parentUuid": "9a561d44_f33a1033",
      "range": {
        "startLine": 588,
        "startChar": 0,
        "endLine": 596,
        "endChar": 29
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_53fdbc39",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 648,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "This is modifying VNFD, which is accessed by other tests in the class.\nYou need copy the value of VNFD before swapping the values.\nThere\u0027s no need for the _swap_test_servers method.\n\nYou can make a copy of the VNFD and do an in place swap:\n    vnfd \u003d copy.deepcopy(VNFD)\n    vnfd[\u0027config\u0027][0], vnfd[\u0027config\u0027][1] \u003d \\\n                vnfd[\u0027config\u0027][1], vnfd[\u0027config\u0027][0]\n\nThis would also remove the need to do a cleanup on line 653.\nIf you need to add cleanUp, it should be done towards the start of the test. addCleanup doesn\u0027t actually perform the cleanup, it adds a particular method to the \"cleanup queue\" to be called when the method is exited, before tearDown takes place (cleanUp is always called, even if there\u0027s a failure and tearDown is skipped.)",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 648,
        "endChar": 71
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_58f881e5",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 648,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "OV to fix",
      "parentUuid": "9a561d44_53fdbc39",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 648,
        "endChar": 71
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_44bc186d",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 648,
      "author": {
        "id": 7363
      },
      "writtenOn": "2018-09-10T21:40:05Z",
      "side": 1,
      "message": "Will fix. But to use a copy of original VNFD object we need to instantiate LS TG in this test case.",
      "parentUuid": "9a561d44_53fdbc39",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 648,
        "endChar": 71
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_33f80849",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 653,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T14:01:21Z",
      "side": 1,
      "message": "This should e done earlier, if you\u0027re keeping, but, IMHO, it\u0027s not needed if you follow the suggestion on L642-648",
      "range": {
        "startLine": 653,
        "startChar": 0,
        "endLine": 653,
        "endChar": 49
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_332be895",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 657,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-05T17:17:53Z",
      "side": 1,
      "message": "Ideally, the test file should follow the same order as the code file.\n\nThis should be further up, between test_terminate and test_run_traffic.",
      "range": {
        "startLine": 657,
        "startChar": 1,
        "endLine": 657,
        "endChar": 38
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a682502_b8dc3576",
        "filename": "yardstick/tests/unit/network_services/vnf_generic/vnf/test_tg_landslide.py",
        "patchSetId": 2
      },
      "lineNbr": 657,
      "author": {
        "id": 2311
      },
      "writtenOn": "2018-09-06T12:23:09Z",
      "side": 1,
      "message": "If you want to re-order these, you can. But it\u0027s not a major thing.",
      "parentUuid": "9a561d44_332be895",
      "range": {
        "startLine": 657,
        "startChar": 1,
        "endLine": 657,
        "endChar": 38
      },
      "revId": "89af74764abe62313e0b91e14af1b1343f9e8b19",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}