{
  "comments": [
    {
      "key": {
        "uuid": "5a3f45e8_1c62153e",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-26T09:46:54Z",
      "side": 1,
      "message": "I don\u0027t like this... but Shade currently doesn\u0027t provide publicly this API. I think we can make this exception.",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_9c03c541",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1402
      },
      "writtenOn": "2018-03-26T10:00:02Z",
      "side": 1,
      "message": "yep this is a problem.  shade kinda sucks sometimes.\n\nit\u0027s like we need to write a custom create_stack that does what we want.\n\nit should accept a dict, StringIO or str() for the template so we don\u0027t have to use a temporary file, and it should return the CREATE_FAILED events if there is a failure.",
      "parentUuid": "5a3f45e8_1c62153e",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_bc732114",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-26T09:46:54Z",
      "side": 1,
      "message": "a) The heat command we send is CREATE. According to [1], this should be CREATED_FAILED.\n\nb) Line too long:\nyardstick/orchestrator/heat.py:69: [C0301(line-too-long), ] Line too long (108/99)\n\n[1] https://github.com/openstack/heat/blob/6ccfb11df91403069b6846cc17cd32120a8c30f1/heat/engine/api.py#L150",
      "range": {
        "startLine": 69,
        "startChar": 99,
        "endLine": 69,
        "endChar": 105
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_5ceadd75",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1402
      },
      "writtenOn": "2018-03-26T10:00:02Z",
      "side": 1,
      "message": "I did test this.  CREATE_FAILED didn\u0027t work.  I had to run the debugger to figure it out.",
      "parentUuid": "5a3f45e8_bc732114",
      "range": {
        "startLine": 69,
        "startChar": 99,
        "endLine": 69,
        "endChar": 105
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_dcfd4d3c",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1402
      },
      "writtenOn": "2018-03-26T10:04:57Z",
      "side": 1,
      "message": "https://developer.openstack.org/api-ref/orchestration/v1/#list-resource-events\n\nresource_status (Optional)\tquery\tstring\tStack resource status. Valid resource statuses are COMPLETE, FAILED and IN_PROGRESS. This can be specified more than once to filter the results by multiple resource statuses.",
      "parentUuid": "5a3f45e8_5ceadd75",
      "range": {
        "startLine": 69,
        "startChar": 99,
        "endLine": 69,
        "endChar": 105
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_9cb10592",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-26T10:28:26Z",
      "side": 1,
      "message": "hehehe now I don\u0027t understand the unit tests implemented in heat; they used CREATED_FAILED as \"resource_status\". Anyway, if heat works OK with FAILED, it\u0027s because is implemented in this way. Thanks!",
      "parentUuid": "5a3f45e8_dcfd4d3c",
      "range": {
        "startLine": 69,
        "startChar": 99,
        "endLine": 69,
        "endChar": 105
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_5c5c9d7e",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-26T09:46:54Z",
      "side": 1,
      "message": "We are we using this one?",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 119,
        "endChar": 21
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_3ced518c",
        "filename": "yardstick/orchestrator/heat.py",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1402
      },
      "writtenOn": "2018-03-26T10:00:02Z",
      "side": 1,
      "message": "old bad, first attempt.   status_reason is always something about the rollback, not about the actual failures.  I\u0027ll delete this.",
      "parentUuid": "5a3f45e8_5c5c9d7e",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 119,
        "endChar": 21
      },
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3f45e8_3c5f1174",
        "filename": "yardstick/tests/unit/orchestrator/test_heat.py",
        "patchSetId": 4
      },
      "lineNbr": 367,
      "author": {
        "id": 7075
      },
      "writtenOn": "2018-03-26T09:46:54Z",
      "side": 1,
      "message": "A small function to test heat.py:L638-642 could be useful",
      "revId": "6b652dd9b7fc08f833180a254589c072022592f2",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}