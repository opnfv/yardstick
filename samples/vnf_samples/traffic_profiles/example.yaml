# Copyright (c) 2016-2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

schema: "nsb:traffic_profile:0.1"

# This file is a template, it will be filled with values from tc.yaml before passing to the traffic generator

name:            rfc2544
description:     Traffic profile to run RFC2544 latency
traffic_profile:
  traffic_type : rfc2544 # defines traffic behavior - constant or look for highest possible throughput
  frame_rate : 100  # pc of linerate
  flow_number: {{ flow.number }}  #This decides how many frames should be generated. Each frame should have a random of the field
  # that specifies a range (e.g. ipv4 address, port)

private:
	- ipv4_1:
	  outer_l2:
		framesize:
				64B: {{ get(imix_small, 12) }}
				128B: {{get(imix_128B, 12) }}
				256B: {{get(imix_256B, 12) }}
				373b: {{ get(imix_373B, 12) }}
				570B: {{get(imix_570B, 12) }}
				1400B: {{get(imix_1400B, 12) }}
				1518b: {{get(imix_1500B, 12) }}
		srcmac: {{src_mac}} # xe0.local_mac
		dstmac: {{dst_mac}} # xe0.dst_mac
		QinQ:
			S-VLAN:
				id: {{ get(flow.s_vlan_range, "0") }}
				priority: 0
				cfi: 0
			C-VLAN:
				id: {{ get(flow.c_vlan_range, "0") }}
				priority: 0
				cfi: 0
		mpls:
			label: {{ get(flow.mpls_label, "0") }}

		outer_l3v4:
			proto: {{ get(flow.outer_proto, "udp") }},
			srcip4: {{ get(flow.outer_srcip4, "1.1.1.1") }}
			dstip4: {{ get(flow.outer_dstip4, "90.90.90.90") }}
			ttl: 32
			dscp:  {{ get(flow.tos, 0) }}

		outer_l4:
			srcport: {{ get(flow.outer_srcport, "3002") }}
			dstport: {{ get(flow.outer_dstport, "3001") }}
			vni: {{ get(flow.vxlan_vni, "2345") }} #optional
			inner_l2: #optional
			srcmac: {{ get(flow.inner_srcmac, "00:00:00:00:00:00") }}
			dstmac: {{ get(flow.inner_dstmac, "00:00:00:00:00:00") }}

		inner_l3v4: #optional
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip4: {{ get(flow.inner_srcip4, "1.1.1.1") }}
			dstip4: {{ get(flow.inner_dstip4, "90.90.90.90") }}
			ttl: 32
			dscp:  {{ get(flow.inner_tos, 0) }}

		inner_l3v6:
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip6: {{ get(flow.inner_srcip6, "2001::1") }}
			dstip6: {{ get(flow.outer_dstip6, "2001::11") }}
			ttl: 32
			tc: {{ get(flow.inner_tos, 0) }}

		inner_l4:
			srcport: {{ get(flow.inner_srcport, "3002") }}
			dstport: {{ get(flow.inner_dstport, "3001") }}

	- ipv6_2:
		outer_l2:
			framesize:
					64B: {{ get(imix_small, 12) }}
					128B: {{get(imix_128B, 12) }}
					256B: {{get(imix_256B, 12) }}
					373b: {{ get(imix_373B, 12) }}
					570B: {{get(imix_570B, 12) }}
					1400B: {{get(imix_1400B, 12) }}
					1518b: {{get(imix_1500B, 12) }}
			srcmac: {{src_mac}} # xe0.local_mac
			dstmac: {{dst_mac}} # xe0.dst_mac
			QinQ:
				S-VLAN:
					id: {{ get(flow.s_vlan_range, "0") }}
					priority: 0
					cfi: 0
				C-VLAN:
					id: {{ get(flow.c_vlan_range, "0") }}
				priority: 0
				cfi: 0
			mpls:
				label: {{ get(flow.mpls_label, "0") }}

		outer_l3v6:
			proto: {{ get(flow.outer_proto, "udp") }},
			srcip6: {{ get(flow.outer_srcip6, "2001::1") }}
			dstip6: {{ get(flow.outer_dstip6, "2001::11") }}
			ttl: 32
			tc: {{ get(flow.outer_tos, 0) }}

		outer_l4:
			srcport: {{ get(flow.outer_srcport, "3002") }}
			dstport: {{ get(flow.outer_dstport, "3001") }}
			vni: {{ get(flow.vxlan_vni, "2345") }} #optional
			inner_l2: #optional
			srcmac: {{ get(flow.inner_srcmac, "00:00:00:00:00:00") }}
			dstmac: {{ get(flow.inner_dstmac, "00:00:00:00:00:00") }}

		inner_l3v4: #optional
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip4: {{ get(flow.inner_srcip4, "1.1.1.1") }}
			dstip4: {{ get(flow.inner_dstip4, "90.90.90.90") }}
			ttl: 32
			dscp:  {{ get(flow.inner_tos, 0) }}

		inner_l3v6:
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip6: {{ get(flow.inner_srcip6, "2001::1") }}
			dstip6: {{ get(flow.outer_dstip6, "2001::11") }}
			ttl: 32
			tc: {{ get(flow.inner_tos, 0) }}

		inner_l4:
			srcport: {{ get(flow.inner_srcport, "3002") }}
			dstport: {{ get(flow.inner_dstport, "3001") }}

public:
	- ipv4_2:
		outer_l2:
			framesize:
				64B: {{ get(imix_small, 12) }}
				128B: {{get(imix_128B, 12) }}
				256B: {{get(imix_256B, 12) }}
				373b: {{ get(imix_373B, 12) }}
				570B: {{get(imix_570B, 12) }}
				1400B: {{get(imix_1400B, 12) }}
				1518b: {{get(imix_1500B, 12) }}
			srcmac: {{get(private.ipv4_1.dst_mac}} # xe0.local_mac
			dstmac: {{get)private.ipv4_1.src_mac}} # xe0.dst_mac
			QinQ:
				S-VLAN:
					id: {{ get(flow.s_vlan_range, "0") }}
					priority: 0
					cfi: 0
				C-VLAN:
					id: {{ get(flow.c_vlan_range, "0") }}
					priority: 0
					cfi: 0
			mpls:
				label: {{ get(flow.mpls_label, "0") }}

		outer_l3v4:
			proto: {{ get(flow.outer_proto, "udp") }},
			srcip4: {{ get(private.ipv4_1.outer_l3v4.dstip4) }}
			dstip4: {{ get(private.ipv4_1.outer_l3v4.srcip4) }}
			ttl: 32
			dscp:  {{ get(flow.tos, 0) }}

		outer_l4:
			srcport: {{ get(private.ipv4_1.outer_l4.dstport) }}
			dstport: {{ get(private.ipv4_1.outer_l4.srcport) }}
			vni: {{ get(flow.vxlan_vni, "2345") }} #optional
			inner_l2: #optional
				srcmac: {{ get(private.ipv4_1.outer_l4.inner_l2.dstmac) }}
				dstmac: {{ get(private.ipv4_1.outer_l4.inner_l2.srcmac) }}

		inner_l3v4: #optional
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip4: {{ get(private.ipv4_1.inner_l3v4.dstip4) }}
			dstip4: {{ get(private.ipv4_1.inner_l3v4.srcip4) }}
			ttl: 32
			dscp:  {{ get(flow.inner_tos, 0) }}

		inner_l3v6:
			proto: {{ get(flow.inner_proto, "udp") }},
			srcip6: {{ get(private.ipv4_1.inner_l3v6.dstip6) }}
			dstip6: {{ get(private.ipv4_1.inner_l3v6.srcip6) }}
			ttl: 32
			tc: {{ get(flow.inner_tos, 0) }}

		inner_l4:
			srcport: {{ get(private.ipv4_1.inner_l4.dstport) }}
			dstport: {{ get(private.ipv4_1.inner_l4.srcport) }}
