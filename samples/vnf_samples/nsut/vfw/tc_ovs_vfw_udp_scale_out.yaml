# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
schema: yardstick:task:0.1
scenarios:
  - type: NSPerf
    traffic_profile: ../../traffic_profiles/ipv4_throughput-{{ item.num_vnfs }}.yaml
    topology: vfw-tg-topology-scale-out-{{ item.num_vnfs }}.yaml 
    nodes:
      tg__1: trafficgen_1.yardstick
{% for vnf_num in range(item.num_vnfs|int) %}
      vnf__{{ vnf_num + 1}}: vnf_{{ vnf_num }}.yardstick
{% endfor %}
    options:
      framesize:
        private: {{ flow.pkt_size.private }}
        public: {{ flow.pkt_size.public }}
      flow:
        src_ip:
{% for vnf_num in range(item.num_vnfs|int) %}
          - {'tg__1': 'xe{{ (vnf_num * 2)}}'}
{% endfor %}
        dst_ip:
{% for vnf_num in range(item.num_vnfs|int) %}
          - {'tg__1': 'xe{{ (vnf_num * 2) + 1}}'}
{% endfor %}
        count: {{ flow.count }}
      traffic_type: {{ flow.traffic_type }}
      rfc2544:
        allowed_drop_rate: {{ flow.rfc2544.allowed_drop_rate }}
{% for vnf_num in range(item.num_vnfs|int) %}
      vnf__{{ vnf_num + 1}}:
        rules: acl_1rule.yaml
        vnf_config: {lb_config: '{{flow.vnf_config.lb_config}}', lb_count: {{flow.vnf_config.lb_count}} , worker_config: '{{flow.vnf_config.worker_config}}', worker_threads: {{flow.vnf_config.worker_threads}}}
{% endfor %}
    runner:
      type: Iteration
      iterations: 10
      interval: 35
contexts:
   - name: yardstick
     type: Node
     file: /etc/yardstick/nodes/baremetal_trex_{{item.num_vnfs}}.yaml
   - type: Standalone
     name: yardstick
     nfvi_type: Ovsdpdk
     file: /etc/yardstick/nodes/ovs_host.yaml
     vm_deploy: True
     ovs_properties:
       version:
         ovs: {{ ovs_properties.ovs  }}
         dpdk: {{ ovs_properties.dpdk }}
       vpath: "{{ ovs_properties.vpath }}"
     flavor:
       images: {{ flavor.image }}
       ram: {{ flavor.ram }}
       extra_specs:
         hw:cpu_sockets: {{ flavor.extra_specs.cpu_sockets }}
         hw:cpu_cores: {{ flavor.extra_specs.cpu_cores }}
         hw:cpu_threads: {{ flavor.extra_specs.cpu_threads }}
       user: {{ flavor.user }}
       password: {{ flavor.password }}
     servers:
{% for vnf_num in range(item.num_vnfs|int) %}
       vnf_{{ vnf_num }}:
         network_ports:
           mgmt:
             cidr: '{{vnf.ip.mgmt[vnf_num]}}'
           xe0:
             - private_{{ vnf_num + 1}}
           xe1:
             - public_{{ vnf_num + 1}}
{% endfor %}
     networks:
{% for vnf_num in range(item.num_vnfs|int) %}
       private_{{ vnf_num + 1}}:
         port_num: {{ vnf_num * 2 }} 
         phy_port: "{{vnf.pcis.private[vnf_num]}}"
         vpci: "0000:00:0{{ vnf_num + 1 * (9 | random)}}.0"
         cidr: '{{vnf.ip.private[vnf_num]}}'
         gateway_ip: '{{gen.ip.private[vnf_num]}}'
       public_{{ vnf_num + 1}}:
         port_num: {{ (vnf_num * 2) + 1}} 
         phy_port: "{{vnf.pcis.public[vnf_num]}}"
         vpci: "0000:00:0{{ vnf_num  + 2 * (9 | random) }}.0"
         cidr: '{{vnf.ip.public[vnf_num]}}'
         gateway_ip: '{{gen.ip.public[vnf_num]}}'
{% endfor %}
