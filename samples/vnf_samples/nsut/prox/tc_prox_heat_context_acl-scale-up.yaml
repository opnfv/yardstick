# Copyright (c) 2016-2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% set vports = vports or 2 %}
{% set mem = mem or 20480 %}
{% set vcpus = vcpus or 10 %}
{% set disk = disk or 6 %}
{% set duration = duration or 300 %}
---
schema: "yardstick:task:0.1"

scenarios:
-
  type: NSPerf
  #
  # In case where we know that all the packets generated by the generator
  # will bw received. Then use prox_binsearch.
  #
  # In the case where some or all the packets generated by the generator may
  # not be received. Please use prox_heat_acl .. (This generates packets at
  # a specific rate and does not change rate.
  #
  traffic_profile: ../../traffic_profiles/prox_heat_acl.yaml
  extra_args:
    vports: {{ vports }}
  topology: prox-tg-topology-scale-up.yaml

  nodes:
    tg__0: tg_0.yardstick
    vnf__0: vnf_0.yardstick

  options:
    vnf__0:
      prox_path: /opt/nsb_bin/prox
      prox_config: "configs/handle_acl-{{ vports }}.cfg"
      prox_args:
        "-t": ""
      prox_files:
        "configs/acl_rules-2.lua" : ""

    tg__0:
      prox_path: /opt/nsb_bin/prox
      prox_config: "configs/gen_acl-{{ vports }}.cfg"
      prox_args:
        "-e": ""
        "-t": ""

  runner:
    type: Duration
    # we kill after duration, independent of test duration, so set this high
    duration: {{ duration }}

context:
  name: yardstick
  image: yardstick-samplevnfs
  user: ubuntu
  flavor:
    vcpus: {{ vcpus }}
    ram: {{ mem }}
    disk: {{ disk }}
    extra_specs:
      hw:cpu_sockets: 1
      hw:cpu_cores: {{ vcpus }}
      hw:cpu_threads: 1
  placement_groups:
    pgrp1:
      policy: "availability"

  servers:
    vnf_0:
      floating_ip: true
      placement: "pgrp1"
    tg_0:
      floating_ip: true
      placement: "pgrp1"

  networks:
    mgmt:
      cidr: '10.0.1.0/24'
    uplink_0:
      cidr: '10.0.2.0/24'
      gateway_ip: 'null'
      port_security_enabled: False
      enable_dhcp: 'false'
{% for vport in range(vports-1|int) %}
    downlink_{{ vport }}:
      cidr: '10.0.{{ vport+3 }}.0/24'
      gateway_ip: 'null'
      port_security_enabled: False
      enable_dhcp: 'false'
{% endfor %}

