{
  "comments": [
    {
      "key": {
        "uuid": "5aaae553_520ca942",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T20:59:03Z",
      "side": 1,
      "message": "would prefer this as constant\n\n VNIC_DRIVER \u003d \"ixgbevf\"\n\ncan we support i40evf as well?\n\n  VNIC_TYPES \u003d { \n    \"ixgbevf\": \"ixgbevf\",\n    \"i40evf\": \"i40evf\",\n  }\n\n  try:\n     self.vnic_type \u003d VNIC_TYPES[vnic_type]\n  except KeyError:\n     self.vnic_type \u003d \"ovs\"\n     # OVS stuff\n  else:\n     # one time setup stuff\n     cmd \u003d \"sudo ethool ....\"\n     # ixgbevf, i40evf stuff",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_66d83054",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "Will change it to a constant. I don\u0027t have i40evf card...prefer not to deliver not tested code.",
      "parentUuid": "5aaae553_520ca942",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_7209a530",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 107,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T20:59:03Z",
      "side": 1,
      "message": "why only eth0?  can we take interface as arg and default to eth0?",
      "range": {
        "startLine": 107,
        "startChar": 39,
        "endLine": 107,
        "endChar": 43
      },
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_66bfd0d1",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 107,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "yes, will extend the coverage.",
      "parentUuid": "5aaae553_7209a530",
      "range": {
        "startLine": 107,
        "startChar": 39,
        "endLine": 107,
        "endChar": 43
      },
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_12063121",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 128,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T20:59:03Z",
      "side": 1,
      "message": "*sigh* everyone disables irqbalance, nobody ever fixes it.",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_32032d11",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 185,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T20:59:03Z",
      "side": 1,
      "message": "can we pre-compute smp_affinity in python and not use $((1\u003c\u003c%s))?\n\n cmd \u003d \"echo \u0027%s\u0027 | sudo tee /proc/irq/%s/smp_affinity\" \\\n                % (1\u003c\u003ci, int(stdout))",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_06b4dcf0",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 185,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "How do you it do?",
      "parentUuid": "5aaae553_32032d11",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_351a376f",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T21:42:53Z",
      "side": 1,
      "message": "this will only check client error status?\n\nmaybe refactor extract a helper method\n\n  def both(cmd):\n    for node in [\"server\", \"client\"]\"\n      status, stdout, stderr \u003d getattr(self, node).execute(cmd)\n      if status:\n         raise RuntimeError(stderr)\n\n\n  self.both(cmd)",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 203,
        "endChar": 42
      },
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_26b9d8e9",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 203,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "Client and server have the same configuration, checking one is enough.",
      "parentUuid": "5aaae553_351a376f",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 203,
        "endChar": 42
      },
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_151dbb66",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 239,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T21:42:53Z",
      "side": 1,
      "message": "please use interface as parameter and default to eth0\n\n  cmd \u003d \"grep {}-TxRx- /proc/interrupts | wc -l\".format(intf)",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_c6cd6488",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 239,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "yes, will do.",
      "parentUuid": "5aaae553_151dbb66",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_7510af4e",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 361,
      "author": {
        "id": 1402
      },
      "writtenOn": "2017-06-21T21:42:53Z",
      "side": 1,
      "message": "can we have better comment?  we know you added it from git history.\n\nis this some float round thing?  why the modulo?",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_a6c4e85f",
        "filename": "yardstick/benchmark/scenarios/networking/pktgen.py",
        "patchSetId": 11
      },
      "lineNbr": 361,
      "author": {
        "id": 6675
      },
      "writtenOn": "2017-06-24T04:33:14Z",
      "side": 1,
      "message": "Overlooked this comment, will change it. The reason for the change, e.g. if 1 out of 1m is allowed, without the extra code, 1 out of 1m is regarded as a failure.",
      "parentUuid": "5aaae553_7510af4e",
      "revId": "994449b40f2281c801539aa81906083a3565303c",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}